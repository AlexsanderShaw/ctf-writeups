from z3 import *

# len 40
# alictf{keep_young_and_stay_simple_+1s_!}

# step 1
a = [ord(ch) for ch in 'excited']
b = [0x0e, 0x1d, 0x06, 0x19, ord('+'), 0x1c, 0x0b,
     0x10, 0x16, 0x04, ord('6'), 0x15, 0x0b, 0,
     ord(':'), 0x0b]

res = []
for i in range(16):
	ch = b[i] ^ a[i%len(a)]
	res.append(chr(ch))
print "".join(res)


# step2
A = [[11, 32, 31, 0, 10, 10, 6, 18, 10, 17, 16, 5, 12, 9, 26, 13],
	[0, 31, 15, 28, 2, 30, 18, 20, 12, 7, 12, 25, 13, 7, 11, 22],
	[13, 27, 8, 17, 7, 1, 17, 7, 21, 29, 8, 31, 31, 16, 28, 26],
	[13, 27, 20, 19, 12, 16, 0, 4, 16, 4, 21, 9, 11, 8, 24, 0],
	[17, 5, 25, 13, 14, 14, 29, 2, 24, 21, 27, 5, 20, 23, 22, 14],
	[6, 0, 20, 13, 24, 30, 25, 5, 32, 7, 15, 10, 6, 20, 27, 18],
	[18, 28, 11, 31, 4, 16, 30, 24, 22, 7, 4, 19, 18, 11, 12, 27],
	[2, 23, 1, 23, 10, 12, 28, 14, 19, 3, 13, 29, 27, 9, 3, 22],
	[27, 30, 32, 8, 24, 11, 12, 7, 12, 26, 27, 0, 1, 32, 14, 25],
	[28, 8, 17, 10, 9, 9, 18, 16, 16, 24, 19, 25, 22, 30, 24, 10],
	[24, 0, 30, 10, 19, 20, 3, 25, 1, 17, 23, 25, 5, 16, 7, 16],
	[20, 1, 19, 21, 23, 27, 15, 5, 32, 30, 1, 20, 3, 28, 15, 12],
	[15, 16, 26, 9, 29, 25, 11, 10, 21, 6, 16, 12, 23, 21, 31, 32],
	[10, 1, 18, 27, 11, 6, 4, 23, 9, 8, 17, 31, 18, 22, 2, 16],
	[11, 16, 23, 28, 10, 10, 19, 10, 10, 4, 12, 1, 0, 15, 14, 5],
	[2, 18, 24, 26, 23, 22, 30, 18, 18, 6, 0, 20, 17, 12, 23, 1]]

C = [25434, 19549, 19765, 28025, 27015, 23139, 26935, 29052, 20005, 25636, 25317, 26852, 20113, 24424, 22495, 22055]
C = C[::-1]

s = Solver()
flag = [BitVec('x%s'%i, 32) for i in range(16)]
# print flag

for i in range(16):
	s.add(flag[i] >=32, flag[i] <= 126)

TMP = [0 for _ in range(16)]

for i in range(16):
	for j in range(16):
		TMP[i] += flag[j] * A[i][j] 

# for i in range(16):
# 	print TMP[i]

for i in range(16):
	s.add(TMP[i] == C[i])

assert(s.check() == sat) 

m = s.model()
res = []
for i in range(16):
    res.append(chr(m[flag[i]].as_long()))
print ''.join(res)
